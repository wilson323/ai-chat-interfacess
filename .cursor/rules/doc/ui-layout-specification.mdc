---
description:
globs:
alwaysApply: false
---
# UI布局规范与约束

## 总体设计原则

### 1. 双端分离架构

```mermaid
graph TB
    subgraph "系统架构"
        A[用户端 - 统一访问界面]
        B[管理员端 - 独立管理后台]
        C[FastGPT API]
        D[AI模型仓库]
    end
    
    A -->|数据透传| C
    B -->|配置管理| C
    B -->|模型管理| D
    
    style A fill:#e1f5fe
    style B fill:#fff3e0
```

### 2. 核心约束原则

- **用户端**: 单一对话界面，无需登录，所有数据存储在FastGPT
- **管理员端**: 独立后台，需要登录，负责配置和监控
- **数据流向**: 用户端仅透传消息，不做本地存储
- **智能体切换**: 通过左上角选择器实现界面动态切换

---

## 用户端界面规范

### 1. 整体布局约束

```mermaid
graph TB
    subgraph "用户端布局 - 固定结构"
        A[左上角智能体选择器 - 固定位置]
        B[主对话区域 - 动态内容]
        C[底部交互区域 - 智能体相关]
    end
    
    subgraph "智能体选择器内容"
        D[FastGPT对话智能体]
        E[CAD解读智能体]
        F[其他智能体...]
    end
    
    A --> D
    A --> E
    A --> F
```

#### 布局约束规则
- **固定元素**: 左上角智能体选择器位置不可变
- **动态区域**: 主对话区域根据智能体类型动态切换
- **响应式**: 移动端自适应，保持核心功能可用
- **无侧边栏**: 不允许添加历史记录侧边栏或其他固定侧边栏

### 2. FastGPT对话智能体界面

```mermaid
graph TB
    subgraph "FastGPT对话界面"
        A[智能体选择器]
        B[对话消息区域]
        C[流式输出显示]
        D[节点状态展示]
        E[操作按钮区域]
        F[消息输入框]
    end
    
    subgraph "消息流程"
        G[生成设备ID] --> H[创建会话ID]
        H --> I[检查全局变量]
        I --> J[显示开场白]
        J --> K[开始对话]
    end
    
    A --> B
    B --> C
    C --> D
    D --> E
    E --> F
    G --> A
```

#### 界面元素规范

##### 智能体选择器
```typescript
interface AgentSelector {
  position: 'top-left';
  style: 'dropdown' | 'tabs';
  agents: FastGPTAgent[];
  onSelect: (agentId: string) => void;
}
```

##### 对话区域
```typescript
interface ChatArea {
  messages: Message[];
  streamingResponse: boolean;
  nodeStatus: NodeStatus[];
  actionButtons: ActionButton[];
  layout: 'single-column';
}
```

##### 流式输出展示
- **实时显示**: 字符逐个显示，支持打字机效果
- **节点状态**: 显示FastGPT工作流节点执行状态
- **状态图标**: 等待中、执行中、完成、错误等状态
- **进度指示**: 当前执行到哪个节点

##### 操作按钮交互
- **动态生成**: 根据FastGPT返回的按钮配置动态生成
- **样式统一**: 使用项目统一的按钮样式
- **交互反馈**: 点击后显示加载状态
- **结果处理**: 将用户选择结果发送回FastGPT

### 3. CAD解读智能体界面

```mermaid
graph TB
    subgraph "CAD解读界面"
        A[智能体选择器]
        B[文件上传区域]
        C[CAD图纸预览]
        D[解读进度显示]
        E[分析结果展示]
        F[报告下载区域]
    end
    
    subgraph "处理流程"
        G[选择CAD智能体] --> H[上传CAD文件]
        H --> I[文件验证]
        I --> J[调用AI模型分析]
        J --> K[显示解读结果]
        K --> L[生成分析报告]
    end
    
    A --> B
    B --> C
    C --> D
    D --> E
    E --> F
    G --> A
```

#### 界面元素规范

##### 文件上传区域
```typescript
interface FileUploadArea {
  acceptedTypes: ['.dwg', '.dxf', '.pdf', '.jpg', '.png'];
  maxSize: '10MB';
  dragDrop: true;
  preview: true;
  validation: FileValidation;
}
```

##### CAD图纸预览
- **缩略图显示**: 支持CAD文件缩略图预览
- **缩放功能**: 支持图纸放大缩小查看
- **标注显示**: 显示AI识别的关键区域标注
- **图层控制**: 支持图层显示/隐藏切换

##### 解读结果展示
- **结构化显示**: 按设备类型、区域等分类展示
- **可视化图表**: 设备分布图、统计图表
- **详细报告**: 文字描述+图片标注
- **导出功能**: 支持PDF、Word格式导出

### 4. 用户端核心流程

#### 首次访问流程
```typescript
// 设备ID生成和存储
const generateDeviceId = (): string => {
  const deviceId = crypto.randomUUID();
  localStorage.setItem('deviceId', deviceId);
  return deviceId;
};

// 检查或生成设备ID
const getDeviceId = (): string => {
  return localStorage.getItem('deviceId') || generateDeviceId();
};
```

#### 新建对话流程
```typescript
interface NewConversationFlow {
  step1: 'generate_session_id';
  step2: 'call_fastgpt_init';
  step3: 'check_global_variables';
  step4: 'show_variable_form' | 'show_welcome_message';
  step5: 'start_conversation';
}
```

#### 消息交互流程
```typescript
interface MessageFlow {
  input: UserMessage;
  processing: 'stream_to_fastgpt';
  output: {
    streamResponse: boolean;
    nodeStatus: NodeStatus[];
    actionButtons?: ActionButton[];
    finalMessage: string;
  };
  storage: 'fastgpt_only'; // 强制约束：不在本地存储
}
```

---

## 管理员端界面规范

### 1. 整体布局架构

```mermaid
graph TB
    subgraph "管理员后台布局"
        A[登录页面]
        B[主导航栏]
        C[侧边菜单]
        D[内容区域]
        E[状态栏]
    end
    
    subgraph "主要功能模块"
        F[智能体管理]
        G[AI模型仓库]
        H[数据监控]
        I[系统设置]
    end
    
    A --> B
    B --> C
    C --> D
    D --> F
    D --> G
    D --> H
    D --> I
    B --> E
```

### 2. 智能体管理模块

#### FastGPT智能体配置
```mermaid
graph TB
    subgraph "FastGPT智能体配置流程"
        A[输入AppID和密钥]
        B[点击获取配置按钮]
        C[自动生成会话ID]
        D[调用FastGPT初始化接口]
        E[保存返回配置]
        F[保存全局变量定义]
        G[保存开场白]
    end
    
    A --> B
    B --> C
    C --> D
    D --> E
    E --> F
    E --> G
```

##### 配置表单规范
```typescript
interface FastGPTAgentConfig {
  name: string;                    // 智能体名称
  appId: string;                   // FastGPT应用ID
  apiKey: string;                  // FastGPT API密钥
  apiUrl?: string;                 // 自定义API地址
  description?: string;            // 智能体描述
  isPublished: boolean;            // 是否发布到用户端
  globalVariables?: GlobalVariable[]; // 全局变量配置
  welcomeMessage?: string;         // 开场白
}
```

#### CAD解读智能体配置
```mermaid
graph TB
    subgraph "CAD智能体配置"
        A[选择AI大模型]
        B[配置模型参数]
        C[设置解读模板]
        D[配置输出格式]
        E[测试配置]
    end
    
    subgraph "模型选择"
        F[从预配模型库选取]
        G[多模态模型]
        H[视觉理解模型]
        I[文本生成模型]
    end
    
    A --> F
    F --> G
    F --> H
    F --> I
    B --> C
    C --> D
    D --> E
```

##### 配置表单规范
```typescript
interface CADAgentConfig {
  name: string;                    // 智能体名称
  modelId: string;                 // 选择的AI模型ID
  modelParams: {
    temperature: number;           // 温度参数
    maxTokens: number;            // 最大token数
    topP: number;                 // Top-P参数
  };
  analysisTemplate: string;        // 解读模板
  outputFormat: 'json' | 'markdown' | 'html'; // 输出格式
  isPublished: boolean;           // 是否发布
}
```

### 3. AI模型仓库模块

#### 模型管理架构
```mermaid
graph TB
    subgraph "AI模型仓库"
        A[NLP模型管理]
        B[多模态模型管理]
        C[语音模型管理]
        D[模型性能监控]
    end
    
    subgraph "NLP模型类型"
        E[阿里千问系列]
        F[硅基模型]
        G[其他大语言模型]
    end
    
    subgraph "语音模型类型"
        H[TTS文字转语音]
        I[ASR语音识别]
    end
    
    A --> E
    A --> F
    A --> G
    C --> H
    C --> I
```

#### 模型配置规范
```typescript
interface AIModelConfig {
  // 基础信息
  id: string;
  name: string;
  type: 'nlp' | 'multimodal' | 'tts' | 'asr';
  provider: 'alibaba' | 'silicon' | 'openai' | 'custom';
  
  // API配置
  apiUrl: string;
  apiKey: string;
  apiVersion?: string;
  
  // 性能配置
  qpsLimit: number;              // QPS限制
  maxConcurrency: number;        // 最大并发数
  timeout: number;               // 超时时间
  
  // 模型参数
  defaultParams: {
    temperature?: number;
    maxTokens?: number;
    topP?: number;
    topK?: number;
  };
  
  // 状态信息
  status: 'active' | 'inactive' | 'error';
  lastHealthCheck: Date;
  isPublished: boolean;
}
```

### 4. 数据监控模块

#### 监控面板布局
```mermaid
graph TB
    subgraph "数据监控面板"
        A[全国IP请求热点地图]
        B[智能体使用统计]
        C[区域请求TOP10]
        D[实时监控指标]
    end
    
    subgraph "地图功能"
        E[按智能体类型分层显示]
        F[实时请求热点]
        G[历史数据回放]
        H[区域统计钻取]
    end
    
    subgraph "统计图表"
        I[请求量趋势图]
        J[智能体使用排行]
        K[响应时间分布]
        L[错误率统计]
    end
    
    A --> E
    A --> F
    A --> G
    A --> H
    B --> I
    B --> J
    C --> K
    C --> L
```

#### 监控数据结构
```typescript
interface MonitoringData {
  // 地图数据
  ipHeatmap: {
    latitude: number;
    longitude: number;
    requestCount: number;
    agentType: string;
    timestamp: Date;
  }[];
  
  // 统计数据
  agentUsage: {
    agentId: string;
    agentName: string;
    requestCount: number;
    successRate: number;
    avgResponseTime: number;
  }[];
  
  // 区域统计
  regionStats: {
    region: string;
    requestCount: number;
    userCount: number;
    topAgents: string[];
  }[];
  
  // 实时指标
  realTimeMetrics: {
    totalRequests: number;
    activeUsers: number;
    avgResponseTime: number;
    errorRate: number;
    timestamp: Date;
  };
}
```

---

## 响应式设计约束

### 1. 断点定义
```css
/* 移动端 */
@media (max-width: 768px) {
  /* 用户端：单列布局，智能体选择器改为底部标签 */
  /* 管理员端：侧边栏折叠，主要功能保持可用 */
}

/* 平板端 */
@media (min-width: 769px) and (max-width: 1024px) {
  /* 用户端：保持原布局，适当调整间距 */
  /* 管理员端：侧边栏可折叠，内容区域自适应 */
}

/* 桌面端 */
@media (min-width: 1025px) {
  /* 用户端：标准布局 */
  /* 管理员端：完整功能展示 */
}
```

### 2. 移动端适配规则

#### 用户端移动适配
- **智能体选择器**: 改为底部标签栏形式
- **对话区域**: 全屏显示，优化触摸交互
- **输入框**: 固定在底部，避免键盘遮挡
- **文件上传**: 支持移动端文件选择和拍照

#### 管理员端移动适配
- **导航菜单**: 汉堡菜单形式
- **数据表格**: 横向滚动或卡片式展示
- **图表**: 简化显示，保持核心信息
- **表单**: 垂直布局，增大触摸区域

---

## 性能约束

### 1. 加载性能要求
- **首屏加载**: < 2秒
- **智能体切换**: < 500ms
- **消息发送**: < 100ms（不含AI响应时间）
- **文件上传**: 支持大文件分片上传

### 2. 内存使用约束
- **消息历史**: 仅保留当前会话，不做本地缓存
- **文件预览**: 使用虚拟滚动，避免大文件内存占用
- **图表渲染**: 数据量大时使用分页或虚拟化

### 3. 网络优化
- **API调用**: 合并请求，减少网络往返
- **静态资源**: CDN加速，启用压缩
- **图片优化**: WebP格式，响应式图片

---

## 安全约束

### 1. 用户端安全
- **无敏感数据**: 不存储用户聊天记录
- **设备ID**: 仅用于会话标识，不关联个人信息
- **文件上传**: 严格文件类型和大小限制
- **XSS防护**: 所有用户输入进行转义

### 2. 管理员端安全
- **登录验证**: JWT token认证
- **权限控制**: 基于角色的访问控制
- **操作日志**: 记录所有配置变更
- **API密钥**: 加密存储，脱敏显示

---

## 开发约束

### 1. 组件复用原则
- **智能体选择器**: 统一组件，支持不同样式
- **消息组件**: 支持多种消息类型渲染
- **表单组件**: 统一验证和提交逻辑
- **图表组件**: 可配置的数据可视化组件

### 2. 状态管理约束
- **用户端**: 最小化状态，主要依赖FastGPT
- **管理员端**: 使用Context管理全局状态
- **数据同步**: 实时更新监控数据
- **错误处理**: 统一错误边界和提示

### 3. 测试要求
- **用户端**: 重点测试智能体切换和消息流
- **管理员端**: 重点测试配置功能和数据展示
- **E2E测试**: 覆盖完整用户流程
- **性能测试**: 验证响应时间和并发能力

---

**注意**: 本规范是强制性约束，所有UI开发必须严格遵守。任何偏离规范的设计都需要经过架构师审批。
