---
alwaysApply: true
description: 核心开发标准和最佳实践
---

# 核心开发标准

## 开发环境要求
- 必须在Windows环境下开发
- 禁止使用WSL环境执行命令
- 使用PowerShell而非Bash命令
- 确保跨平台兼容性

## 代码质量要求
- 代码可读性优先，避免冗余逻辑
- 保障代码逻辑严谨性，考虑全相关代码逻辑
- 测试优先：所有变更必须使用真实数据测试
- 确保100%通过（覆盖率 >80%）
- 集成钩子执行测试，并在任务间验证架构符合度

## 命名规范
- 变量和函数：camelCase
- 文件：kebab-case
- 类名：PascalCase
- 常量：UPPER_SNAKE_CASE
- 接口：PascalCase，以I开头
- 类型别名：PascalCase
- 枚举：PascalCase

## 导入导出规范
- 优先使用命名导出而非默认导出
- 使用Array<T>而非T[]语法
- 在TypeScript中始终启用严格模式（strict: true）
- 导入顺序：React → Next.js → 第三方库 → 内部模块

## 错误处理要求
- 为所有函数添加错误处理
- 严格按照错误处理架构规范
- 复杂函数必须添加JSDoc注释
- 全部方法与路由提供错误处理与超时
- 返回统一错误格式

## 项目一致性
- 严格遵守开发规范和钩子要求
- 确保代理功能不偏离核心目标
- 每个阶段落实好且也测试验证后请自动提交git
- 禁止代码组件功能等的冗余
- 新增前先全局梳理确保不冗余再去新增

参考配置文件：[tsconfig.json](mdc:tsconfig.json), [package.json](mdc:package.json)