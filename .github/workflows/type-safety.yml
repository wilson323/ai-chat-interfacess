name: Type Safety Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # 每天凌晨2点运行
    - cron: '0 2 * * *'

jobs:
  type-safety:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: TypeScript Compilation Check
      run: npm run type-check

    - name: Type Safety Coverage Check
      run: npm run type-coverage

    - name: Type Tests
      run: npm run type-tests

    - name: Lint with Type Safety Rules
      run: npx eslint . --config .eslintrc.type-safety.js --ext .ts,.tsx

    - name: Upload Type Safety Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: type-safety-report-${{ matrix.node-version }}
        path: reports/type-safety-report.json

    - name: Comment PR with Type Safety Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'reports/type-safety-report.json';

          if (fs.existsSync(path)) {
            const report = JSON.parse(fs.readFileSync(path, 'utf8'));
            const score = report.score;
            const status = report.status;

            const emoji = score >= 90 ? '🟢' : score >= 70 ? '🟡' : '🔴';
            const statusText = status === 'excellent' ? '优秀' :
                             status === 'good' ? '良好' : '需要改进';

            const comment = `## ${emoji} Type Safety Report

            **评分**: ${score}%
            **状态**: ${statusText}

            ### 检查结果
            - TypeScript 编译: ${report.checks.compilation ? '✅ 通过' : '❌ 失败'}
            - 类型覆盖率: ${report.checks.coverage ? '✅ 通过' : '❌ 失败'}
            - 未使用导入: ${report.checks.unusedImports ? '✅ 通过' : '❌ 失败'}
            - 类型定义: ${report.checks.typeDefinitions ? '✅ 通过' : '❌ 失败'}

            ${score < 90 ? '⚠️ 建议改进类型安全' : '🎉 类型安全状态良好！'}
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }

  type-coverage-trend:
    runs-on: ubuntu-latest
    needs: type-safety
    if: github.event_name == 'schedule'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate Type Coverage Trend
      run: |
        # 创建趋势数据
        mkdir -p reports/trends
        echo "{\"date\": \"$(date -I)\", \"score\": $(node scripts/type-safety-check.js --json | jq -r '.score')}" >> reports/trends/type-coverage.json

    - name: Upload Trend Data
      uses: actions/upload-artifact@v4
      with:
        name: type-coverage-trend
        path: reports/trends/
